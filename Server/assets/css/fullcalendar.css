@charset "UTF-8";
/*!
 * FullCalendar Style
 * Docs & License: http://arshaw.com/fullcalendar/
 * (c) 2013 Adam Shaw
 */
[dir=ltr] .fc {
  direction: ltr;
  text-align: left;
}

[dir=ltr] .fc-rtl {
  text-align: right;
}

[dir=ltr] body .fc {
  /* extra precedence to overcome jqui */
  font-size: 1rem;
}

/* Colors
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-unthemed th,
[dir=ltr] .fc-unthemed td,
[dir=ltr] .fc-unthemed thead,
[dir=ltr] .fc-unthemed tbody,
[dir=ltr] .fc-unthemed .fc-divider,
[dir=ltr] .fc-unthemed .fc-row,
[dir=ltr] .fc-unthemed .fc-popover {
  border-color: #E9EDF2;
}

[dir=ltr] .fc-unthemed .fc-popover {
  background-color: #fff;
}

[dir=ltr] .fc-unthemed .fc-divider,
[dir=ltr] .fc-unthemed .fc-popover .fc-header {
  background: #eee;
}

[dir=ltr] .fc-unthemed .fc-popover .fc-header .fc-close {
  color: #666;
}

[dir=ltr] .fc-unthemed .fc-today {
  background: #efefef;
}

[dir=ltr] .fc-highlight {
  /* when user is selecting cells */
  background: #bce8f1;
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
}

[dir=ltr] .fc-bgevent {
  /* default look for background events */
  background: #8fdf82;
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
}

[dir=ltr] .fc-nonbusiness {
  /* default look for non-business-hours areas */
  /* will inherit .fc-bgevent's styles */
  background: #d7d7d7;
}

/* Icons (inline elements with styled text that mock arrow icons)
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  line-height: 1em;
  font-size: 1em;
  text-align: center;
  overflow: hidden;
  font-family: "Courier New", Courier, monospace;
}

/*
Acceptable font-family overrides for individual icons:
	"Arial", sans-serif
	"Times New Roman", serif

NOTE: use percentage font sizes or else old IE chokes
*/
[dir=ltr] .fc-icon:after {
  position: relative;
  margin: 0 -1em;
  /* ensures character will be centered, regardless of width */
}

[dir=ltr] .fc-icon-left-single-arrow:after {
  content: "\2039";
  font-weight: bold;
  font-size: 200%;
  top: -7%;
  left: 3%;
}

[dir=ltr] .fc-icon-right-single-arrow:after {
  content: "\203A";
  font-weight: bold;
  font-size: 200%;
  top: -7%;
  left: -3%;
}

[dir=ltr] .fc-icon-left-double-arrow:after {
  content: "\AB";
  font-size: 160%;
  top: -7%;
}

[dir=ltr] .fc-icon-right-double-arrow:after {
  content: "\BB";
  font-size: 160%;
  top: -7%;
}

[dir=ltr] .fc-icon-left-triangle:after {
  content: "\25C4";
  font-size: 125%;
  top: 3%;
  left: -2%;
}

[dir=ltr] .fc-icon-right-triangle:after {
  content: "\25BA";
  font-size: 125%;
  top: 3%;
  left: 2%;
}

[dir=ltr] .fc-icon-down-triangle:after {
  content: "\25BC";
  font-size: 125%;
  top: 2%;
}

[dir=ltr] .fc-icon-x:after {
  content: "\D7";
  font-size: 200%;
  top: 6%;
}

/* Buttons (styled <button> tags, normalized to work cross-browser)
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc button {
  /* force height to include the border and padding */
  box-sizing: border-box;
  /* dimensions */
  margin: 0;
  height: 2.1em;
  padding: 0 0.6em;
  /* text & cursor */
  font-size: 1em;
  /* normalize */
  white-space: nowrap;
  cursor: pointer;
}

/* Firefox has an annoying inner border */
[dir=ltr] .fc button::-moz-focus-inner {
  margin: 0;
  padding: 0;
}

[dir=ltr] .fc-state-default {
  /* non-theme */
  border: 1px solid;
}

[dir=ltr] .fc-state-default.fc-corner-left {
  /* non-theme */
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}

[dir=ltr] .fc-state-default.fc-corner-right {
  /* non-theme */
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}

/* icons in buttons */
[dir=ltr] .fc button .fc-icon {
  /* non-theme */
  position: relative;
  top: -0.05em;
  /* seems to be a good adjustment across browsers */
  margin: 0 0.2em;
  vertical-align: middle;
}

/*
	button states
	borrowed from twitter bootstrap (http://twitter.github.com/bootstrap/)
*/
[dir=ltr] .fc-state-default {
  display: inline-block;
  font-weight: 600;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 1px solid transparent;
  padding: 5px;
  background: #5567FF;
  color: #fff;
}
[dir=ltr] .fc-state-default:hover {
  background: #3c50ff;
}

/* Buttons Groups
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-button-group {
  display: inline-block;
}

/*
every button that is not first in a button group should scootch over one pixel and cover the
previous button's border...
*/
[dir=ltr] .fc .fc-button-group > * {
  /* extra precedence b/c buttons have margin set to zero */
  float: left;
  margin: 0 0 0 2px;
}

[dir=ltr] .fc .fc-button-group > :first-child {
  /* same */
  margin-left: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

[dir=ltr] .fc .fc-button-group > :last-child {
  /* same */
  margin-left: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/* Popover
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-popover {
  position: absolute;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

[dir=ltr] .fc-popover .fc-header {
  /* TODO: be more consistent with fc-head/fc-body */
  padding: 2px 4px;
}

[dir=ltr] .fc-popover .fc-header .fc-title {
  margin: 0 2px;
}

[dir=ltr] .fc-popover .fc-header .fc-close {
  cursor: pointer;
}

[dir=ltr] .fc-ltr .fc-popover .fc-header .fc-title,
[dir=ltr] .fc-rtl .fc-popover .fc-header .fc-close {
  float: left;
}

[dir=ltr] .fc-rtl .fc-popover .fc-header .fc-title,
[dir=ltr] .fc-ltr .fc-popover .fc-header .fc-close {
  float: right;
}

/* unthemed */
[dir=ltr] .fc-unthemed .fc-popover {
  border-width: 1px;
  border-style: solid;
}

[dir=ltr] .fc-unthemed .fc-popover .fc-header .fc-close {
  font-size: 0.9em;
  margin-top: 2px;
}

/* jqui themed */
[dir=ltr] .fc-popover > .ui-widget-header + .ui-widget-content {
  border-top: 0;
  /* where they meet, let the header have the border */
}

/* Misc Reusable Components
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-divider {
  border-style: solid;
  border-width: 1px;
}

[dir=ltr] hr.fc-divider {
  height: 0;
  margin: 0;
  padding: 0 0 2px;
  /* height is unreliable across browsers, so use padding */
  border-width: 1px 0;
}

[dir=ltr] .fc-clear {
  clear: both;
}

[dir=ltr] .fc-bg,
[dir=ltr] .fc-bgevent-skeleton,
[dir=ltr] .fc-highlight-skeleton,
[dir=ltr] .fc-helper-skeleton {
  /* these element should always cling to top-left/right corners */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

[dir=ltr] .fc-bg {
  bottom: 0;
  /* strech bg to bottom edge */
}

[dir=ltr] .fc-bg table {
  height: 100%;
  /* strech bg to bottom edge */
}

/* Tables
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc table {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 1em;
  /* normalize cross-browser */
  border: none;
}

[dir=ltr] .fc th {
  text-align: center;
}

[dir=ltr] .fc th,
[dir=ltr] .fc td {
  border-style: solid;
  border-width: 1px;
  padding: 0;
  vertical-align: top;
}

[dir=ltr] .fc td.fc-today {
  border-style: double;
  /* overcome neighboring borders */
}

/* Fake Table Rows
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc .fc-row {
  /* extra precedence to overcome themes w/ .ui-widget-content forcing a 1px border */
  /* no visible border by default. but make available if need be (scrollbar width compensation) */
  border-style: solid;
  border-width: 0;
}

[dir=ltr] .fc-row table {
  /* don't put left/right border on anything within a fake row.
  	 the outer tbody will worry about this */
  border-left: 0 hidden transparent;
  border-right: 0 hidden transparent;
  /* no bottom borders on rows */
  border-bottom: 0 hidden transparent;
}

[dir=ltr] .fc-row:first-child table {
  border-top: 0 hidden transparent;
  /* no top border on first row */
}

/* Day Row (used within the header and the DayGrid)
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-row {
  position: relative;
}

[dir=ltr] .fc-row .fc-bg {
  z-index: 1;
}

/* highlighting cells & background event skeleton */
[dir=ltr] .fc-row .fc-bgevent-skeleton,
[dir=ltr] .fc-row .fc-highlight-skeleton {
  bottom: 0;
  /* stretch skeleton to bottom of row */
}

[dir=ltr] .fc-row .fc-bgevent-skeleton table,
[dir=ltr] .fc-row .fc-highlight-skeleton table {
  height: 100%;
  /* stretch skeleton to bottom of row */
}

[dir=ltr] .fc-row .fc-highlight-skeleton td,
[dir=ltr] .fc-row .fc-bgevent-skeleton td {
  border-color: transparent;
}

[dir=ltr] .fc-row .fc-bgevent-skeleton {
  z-index: 2;
}

[dir=ltr] .fc-row .fc-highlight-skeleton {
  z-index: 3;
}

/*
row content (which contains day/week numbers and events) as well as "helper" (which contains
temporary rendered events).
*/
[dir=ltr] .fc-row .fc-content-skeleton {
  position: relative;
  z-index: 4;
  padding-bottom: 2px;
  /* matches the space above the events */
}

[dir=ltr] .fc-row .fc-helper-skeleton {
  z-index: 5;
}

[dir=ltr] .fc-row .fc-content-skeleton td,
[dir=ltr] .fc-row .fc-helper-skeleton td {
  /* see-through to the background below */
  background: none;
  /* in case <td>s are globally styled */
  border-color: transparent;
  /* don't put a border between events and/or the day number */
  border-bottom: 0;
}

[dir=ltr] .fc-row .fc-content-skeleton tbody td,
[dir=ltr] .fc-row .fc-helper-skeleton tbody td {
  /* don't put a border between event cells */
  border-top: 0;
}

/* Scrolling Container
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-scroller {
  /* this class goes on elements for guaranteed vertical scrollbars */
  overflow-y: scroll;
  overflow-x: hidden;
}

[dir=ltr] .fc-scroller > * {
  /* we expect an immediate inner element */
  position: relative;
  /* re-scope all positions */
  width: 100%;
  /* hack to force re-sizing this inner element when scrollbars appear/disappear */
  overflow: hidden;
  /* don't let negative margins or absolute positioning create further scroll */
}

/* Global Event Styles
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-event {
  position: relative;
  /* for resize handle and other inner positioning */
  display: block;
  /* make the <a> tag block */
  font-size: 0.85em;
  line-height: 1.3;
  border-radius: 3px;
  padding: 2px;
  background-color: #5567FF;
  /* default BACKGROUND color */
  font-weight: normal;
  /* undo jqui's ui-widget-header bold */
}

/* overpower some of bootstrap's and jqui's styles on <a> tags */
[dir=ltr] .fc-event,
[dir=ltr] .fc-event:hover,
[dir=ltr] .ui-widget .fc-event {
  color: #fff;
  /* default TEXT color */
  text-decoration: none;
  /* if <a> has an href */
}

[dir=ltr] .fc-event[href],
[dir=ltr] .fc-event.fc-draggable {
  cursor: pointer;
  /* give events with links and draggable events a hand mouse pointer */
}

[dir=ltr] .fc-not-allowed,
[dir=ltr] .fc-not-allowed .fc-event {
  /* to override an event's custom cursor */
  cursor: not-allowed;
}

[dir=ltr] .fc-event .fc-bg {
  /* the generic .fc-bg already does position */
  z-index: 1;
  background: #fff;
  opacity: 0.25;
  filter: alpha(opacity=25);
  /* for IE */
}

[dir=ltr] .fc-event .fc-content {
  position: relative;
  z-index: 2;
}

[dir=ltr] .fc-event .fc-resizer {
  position: absolute;
  z-index: 3;
}

/* Horizontal Events
--------------------------------------------------------------------------------------------------*/
/* events that are continuing to/from another week. kill rounded corners and butt up against edge */
[dir=ltr] .fc-ltr .fc-h-event.fc-not-start,
[dir=ltr] .fc-rtl .fc-h-event.fc-not-end {
  margin-left: 0;
  border-left-width: 0;
  border-left-width: 3px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

[dir=ltr] .fc-ltr .fc-h-event.fc-not-end,
[dir=ltr] .fc-rtl .fc-h-event.fc-not-start {
  margin-right: 0;
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/* resizer */
[dir=ltr] .fc-h-event .fc-resizer {
  /* positioned it to overcome the event's borders */
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  width: 5px;
}

/* left resizer  */
[dir=ltr] .fc-ltr .fc-h-event .fc-start-resizer,
[dir=ltr] .fc-ltr .fc-h-event .fc-start-resizer:before,
[dir=ltr] .fc-ltr .fc-h-event .fc-start-resizer:after,
[dir=ltr] .fc-rtl .fc-h-event .fc-end-resizer,
[dir=ltr] .fc-rtl .fc-h-event .fc-end-resizer:before,
[dir=ltr] .fc-rtl .fc-h-event .fc-end-resizer:after {
  right: auto;
  /* ignore the right and only use the left */
  cursor: w-resize;
}

/* right resizer */
[dir=ltr] .fc-ltr .fc-h-event .fc-end-resizer,
[dir=ltr] .fc-ltr .fc-h-event .fc-end-resizer:before,
[dir=ltr] .fc-ltr .fc-h-event .fc-end-resizer:after,
[dir=ltr] .fc-rtl .fc-h-event .fc-start-resizer,
[dir=ltr] .fc-rtl .fc-h-event .fc-start-resizer:before,
[dir=ltr] .fc-rtl .fc-h-event .fc-start-resizer:after {
  left: auto;
  /* ignore the left and only use the right */
  cursor: e-resize;
}

/* DayGrid events
----------------------------------------------------------------------------------------------------
We use the full "fc-day-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/
[dir=ltr] .fc-day-grid-event {
  margin: 4px 5px 0;
  /* spacing between events and edges */
  padding: 0 3px;
}

[dir=ltr] .fc-day-grid-event .fc-content {
  /* force events to be one-line tall */
  white-space: nowrap;
  overflow: hidden;
}

[dir=ltr] .fc-day-grid-event .fc-time {
  font-weight: bold;
}

[dir=ltr] .fc-day-grid-event .fc-resizer {
  /* enlarge the default hit area */
  left: -3px;
  right: -3px;
  width: 7px;
}

/* Event Limiting
--------------------------------------------------------------------------------------------------*/
/* "more" link that represents hidden events */
[dir=ltr] a.fc-more {
  font-size: 0.85em;
  cursor: pointer;
  text-decoration: none;
}

[dir=ltr] a.fc-more:hover {
  text-decoration: underline;
}

[dir=ltr] .fc-limited {
  /* rows and cells that are hidden because of a "more" link */
  display: none;
}

/* popover that appears when "more" link is clicked */
[dir=ltr] .fc-day-grid .fc-row {
  z-index: 1;
  /* make the "more" popover one higher than this */
}

[dir=ltr] .fc-more-popover {
  z-index: 2;
  width: 220px;
}

[dir=ltr] .fc-more-popover .fc-event-container {
  padding: 10px;
}

/* Toolbar
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-toolbar {
  text-align: center;
  padding-bottom: 0.5rem;
}

[dir=ltr] .fc-toolbar .fc-left {
  float: left;
}

[dir=ltr] .fc-toolbar .fc-right {
  float: right;
}

[dir=ltr] .fc-toolbar .fc-center {
  display: inline-block;
}

/* the things within each left/right/center section */
[dir=ltr] .fc .fc-toolbar > * > * {
  /* extra precedence to override button border margins */
  float: left;
  margin-left: 0.75em;
}

/* the first thing within each left/center/right section */
[dir=ltr] .fc .fc-toolbar > * > :first-child {
  /* extra precedence to override button border margins */
  margin-left: 0;
}

/* title text */
[dir=ltr] .fc-toolbar h2 {
  font-size: 24px;
  color: #5567FF;
  margin: 5px 0;
}

/* button layering (for border precedence) */
[dir=ltr] .fc-toolbar button {
  position: relative;
}

[dir=ltr] .fc-toolbar .fc-state-hover,
[dir=ltr] .fc-toolbar .ui-state-hover {
  z-index: 2;
}

[dir=ltr] .fc-toolbar .fc-state-down {
  z-index: 3;
}

[dir=ltr] .fc-toolbar .fc-state-active,
[dir=ltr] .fc-toolbar .ui-state-active {
  z-index: 4;
}

[dir=ltr] .fc-toolbar button:focus {
  z-index: 5;
}

/* View Structure
--------------------------------------------------------------------------------------------------*/
/* undo twitter bootstrap's box-sizing rules. normalizes positioning techniques */
/* don't do this for the toolbar because we'll want bootstrap to style those buttons as some pt */
[dir=ltr] .fc-view-container {
  position: relative;
  display: block;
  margin-bottom: 1rem;
  background-color: #fff;
  border: 1px solid #DFE2E6;
  background: #fff;
  box-shadow: 0px 3px 5px #e2e2e2;
  border: 0;
}

[dir=ltr] .fc-view-container *,
[dir=ltr] .fc-view-container *:before,
[dir=ltr] .fc-view-container *:after {
  box-sizing: content-box;
}

[dir=ltr] .fc-view,
[dir=ltr] .fc-view > table {
  /* so dragged elements can be above the view's main element */
  position: relative;
  z-index: 0;
}

/* BasicView
--------------------------------------------------------------------------------------------------*/
/* day row structure */
[dir=ltr] .fc-basicWeek-view .fc-content-skeleton,
[dir=ltr] .fc-basicDay-view .fc-content-skeleton {
  /* we are sure there are no day numbers in these views, so... */
  padding-top: 1px;
  /* add a pixel to make sure there are 2px padding above events */
  padding-bottom: 1em;
  /* ensure a space at bottom of cell for user selecting/clicking */
}

[dir=ltr] .fc-basic-view .fc-body .fc-row {
  min-height: 4em;
  /* ensure that all rows are at least this tall */
}

/* a "rigid" row will take up a constant amount of height because content-skeleton is absolute */
[dir=ltr] .fc-row.fc-rigid {
  overflow: hidden;
}

[dir=ltr] .fc-row.fc-rigid .fc-content-skeleton {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

/* week and day number styling */
[dir=ltr] .fc-basic-view .fc-week-number,
[dir=ltr] .fc-basic-view .fc-day-number {
  padding: 0 6px;
  font-size: 14px;
}

[dir=ltr] .fc-basic-view td.fc-week-number span,
[dir=ltr] .fc-basic-view td.fc-day-number {
  padding-top: 2px;
  padding-bottom: 2px;
}

[dir=ltr] .fc-basic-view .fc-week-number {
  text-align: center;
}

[dir=ltr] .fc-basic-view .fc-week-number span {
  /* work around the way we do column resizing and ensure a minimum width */
  display: inline-block;
  min-width: 1.25em;
}

[dir=ltr] .fc-ltr .fc-basic-view .fc-day-number {
  text-align: right;
}

[dir=ltr] .fc-rtl .fc-basic-view .fc-day-number {
  text-align: left;
}

[dir=ltr] .fc-day-number.fc-other-month {
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
  /* opacity with small font can sometimes look too faded
  	 might want to set the 'color' property instead
  	 making day-numbers bold also fixes the problem */
}

/* AgendaView all-day area
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-agenda-view .fc-day-grid {
  position: relative;
  z-index: 2;
  /* so the "more.." popover will be over the time grid */
}

[dir=ltr] .fc-agenda-view .fc-day-grid .fc-row {
  min-height: 3em;
  /* all-day section will never get shorter than this */
}

[dir=ltr] .fc-agenda-view .fc-day-grid .fc-row .fc-content-skeleton {
  padding-top: 1px;
  /* add a pixel to make sure there are 2px padding above events */
  padding-bottom: 1em;
  /* give space underneath events for clicking/selecting days */
}

/* TimeGrid axis running down the side (for both the all-day area and the slot area)
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc .fc-axis {
  /* .fc to overcome default cell styles */
  vertical-align: middle;
  padding: 0 4px;
  white-space: nowrap;
}

[dir=ltr] .fc-ltr .fc-axis {
  text-align: right;
}

[dir=ltr] .fc-rtl .fc-axis {
  text-align: left;
}

[dir=ltr] .ui-widget td.fc-axis {
  font-weight: normal;
  /* overcome jqui theme making it bold */
}

/* TimeGrid Structure
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-time-grid-container,
[dir=ltr] .fc-time-grid {
  /* so slats/bg/content/etc positions get scoped within here */
  position: relative;
  z-index: 1;
}

[dir=ltr] .fc-time-grid {
  min-height: 100%;
  /* so if height setting is 'auto', .fc-bg stretches to fill height */
}

[dir=ltr] .fc-time-grid table {
  /* don't put outer borders on slats/bg/content/etc */
  border: 0 hidden transparent;
}

[dir=ltr] .fc-time-grid > .fc-bg {
  z-index: 1;
}

[dir=ltr] .fc-time-grid .fc-slats,
[dir=ltr] .fc-time-grid > hr {
  /* the <hr> AgendaView injects when grid is shorter than scroller */
  position: relative;
  z-index: 2;
}

[dir=ltr] .fc-time-grid .fc-bgevent-skeleton,
[dir=ltr] .fc-time-grid .fc-content-skeleton {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

[dir=ltr] .fc-time-grid .fc-bgevent-skeleton {
  z-index: 3;
}

[dir=ltr] .fc-time-grid .fc-highlight-skeleton {
  z-index: 4;
}

[dir=ltr] .fc-time-grid .fc-content-skeleton {
  z-index: 5;
}

[dir=ltr] .fc-time-grid .fc-helper-skeleton {
  z-index: 6;
}

/* TimeGrid Slats (lines that run horizontally)
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-time-grid .fc-slats td {
  height: 1.5em;
  border-bottom: 0;
  /* each cell is responsible for its top border */
}

[dir=ltr] .fc-time-grid .fc-slats .fc-minor td {
  border-top-style: dotted;
}

[dir=ltr] .fc-time-grid .fc-slats .ui-widget-content {
  /* for jqui theme */
  background: none;
  /* see through to fc-bg */
}

/* TimeGrid Highlighting Slots
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-time-grid .fc-highlight-container {
  /* a div within a cell within the fc-highlight-skeleton */
  position: relative;
  /* scopes the left/right of the fc-highlight to be in the column */
}

[dir=ltr] .fc-time-grid .fc-highlight {
  position: absolute;
  left: 0;
  right: 0;
  /* top and bottom will be in by JS */
}

/* TimeGrid Event Containment
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-time-grid .fc-event-container,
[dir=ltr] .fc-time-grid .fc-bgevent-container {
  /* a div within a cell within the fc-bgevent-skeleton */
  position: relative;
}

[dir=ltr] .fc-ltr .fc-time-grid .fc-event-container {
  /* space on the sides of events for LTR (default) */
  margin: 0 2.5% 0 2px;
}

[dir=ltr] .fc-rtl .fc-time-grid .fc-event-container {
  /* space on the sides of events for RTL */
  margin: 0 2px 0 2.5%;
}

[dir=ltr] .fc-time-grid .fc-event,
[dir=ltr] .fc-time-grid .fc-bgevent {
  position: absolute;
  z-index: 1;
  /* scope inner z-index's */
}

[dir=ltr] .fc-time-grid .fc-bgevent {
  /* background events always span full width */
  left: 0;
  right: 0;
}

/* Generic Vertical Event
--------------------------------------------------------------------------------------------------*/
[dir=ltr] .fc-v-event.fc-not-start {
  /* events that are continuing from another day */
  /* replace space made by the top border with padding */
  border-top-width: 0;
  padding-top: 1px;
  /* remove top rounded corners */
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

[dir=ltr] .fc-v-event.fc-not-end {
  /* replace space made by the top border with padding */
  border-bottom-width: 0;
  padding-bottom: 1px;
  /* remove bottom rounded corners */
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

/* TimeGrid Event Styling
----------------------------------------------------------------------------------------------------
We use the full "fc-time-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/
[dir=ltr] .fc-time-grid-event {
  overflow: hidden;
  /* don't let the bg flow over rounded corners */
}

[dir=ltr] .fc-time-grid-event .fc-time,
[dir=ltr] .fc-time-grid-event .fc-title {
  padding: 0 1px;
}

[dir=ltr] .fc-time-grid-event .fc-time {
  font-size: 0.625rem;
  white-space: nowrap;
}

/* short mode, where time and title are on the same line */
[dir=ltr] .fc-time-grid-event.fc-short .fc-content {
  /* don't wrap to second line (now that contents will be inline) */
  white-space: nowrap;
}

[dir=ltr] .fc-time-grid-event.fc-short .fc-time,
[dir=ltr] .fc-time-grid-event.fc-short .fc-title {
  /* put the time and title on the same line */
  display: inline-block;
  vertical-align: top;
}

[dir=ltr] .fc-time-grid-event.fc-short .fc-time span {
  display: none;
  /* don't display the full time text... */
}

[dir=ltr] .fc-time-grid-event.fc-short .fc-time:before {
  content: attr(data-start);
  /* ...instead, display only the start time */
}

[dir=ltr] .fc-time-grid-event.fc-short .fc-time:after {
  content: "\A0-\A0";
  /* seperate with a dash, wrapped in nbsp's */
}

[dir=ltr] .fc-time-grid-event.fc-short .fc-title {
  font-size: 0.85em;
  /* make the title text the same size as the time */
  padding: 0;
  /* undo padding from above */
}

/* resizer */
[dir=ltr] .fc-time-grid-event .fc-resizer {
  left: 0;
  right: 0;
  bottom: 0;
  height: 8px;
  overflow: hidden;
  line-height: 8px;
  font-size: 11px;
  font-family: monospace;
  text-align: center;
  cursor: s-resize;
}

[dir=ltr] .fc-time-grid-event .fc-resizer:after {
  content: "=";
}

[dir=ltr] #loading {
  display: none;
  position: absolute;
  top: 10px;
  right: 10px;
}
/*# sourceMappingURL=data:application/json;base64, */