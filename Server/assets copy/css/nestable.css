@charset "UTF-8";
[dir=ltr] .nestable {
  position: relative;
}

[dir=ltr] .nestable-list {
  display: block;
  position: relative;
  margin: 0;
  padding: 0;
  list-style: none;
}

[dir=ltr] .nestable-list .nestable-list {
  padding-left: 30px;
  margin-top: 0.25rem;
}

[dir=ltr] .nestable-collapsed .nestable-list {
  display: none;
}

[dir=ltr] .nestable-item,
[dir=ltr] .nestable-empty,
[dir=ltr] .nestable-placeholder {
  display: block;
  position: relative;
}

[dir=ltr] .nestable-handle, [dir=ltr] .nestable-placeholder {
  padding: 10px 15px;
  background-color: #fff;
  border: 1px solid #DFE2E6;
  margin-bottom: 0.25rem;
  border-radius: 0.25rem;
}
[dir=ltr] .nestable-handle i.material-icons, [dir=ltr] .nestable-placeholder i.material-icons {
  vertical-align: middle;
  top: -1px;
  position: relative;
}

[dir=ltr] .nestable-placeholder {
  background-color: #dae1ec;
  border-color: #ccd6e6;
}

[dir=ltr] .nestable-item > button {
  display: block;
  position: relative;
  cursor: pointer;
  float: left;
  width: 35px;
  height: 42px;
  line-height: 42px;
  padding: 0;
  margin-right: 15px;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  border: 0;
  background: transparent;
  text-align: center;
  font-weight: bold;
  font-size: 18px;
}
[dir=ltr] .nestable-item > button:before {
  text-indent: 0;
  display: block;
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  line-height: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "Material Icons";
  font-size: 18px;
  content: "\E5D8";
  top: 2px;
}
[dir=ltr] .nestable-item > button[data-action=collapse]:before {
  font-family: "Material Icons";
  font-size: 18px;
  content: "\E5DB";
  top: 2px;
}
[dir=ltr] .nestable-item > button:focus {
  outline: none;
}

[dir=ltr] .nestable-item-handle {
  clear: both;
  margin-bottom: 5px;
}
[dir=ltr] .nestable-item-handle .nestable-handle, [dir=ltr] .nestable-item-handle .nestable-placeholder {
  position: absolute;
  cursor: pointer;
  width: 35px;
  height: 46px;
  line-height: 44px;
  white-space: nowrap;
  margin-right: 15px;
  padding: 0;
  text-align: center;
}
[dir=ltr] .nestable-item-handle .nestable-content {
  margin-left: 42px;
  padding: 10px 15px;
  background-color: #fff;
  border: 1px solid #DFE2E6;
  margin-bottom: 0.25rem;
  border-radius: 0.25rem;
}

[dir=ltr] .nestable-drag {
  position: absolute;
  pointer-events: none;
  z-index: 9999;
  list-style: none;
}

[dir=ltr] .nestable-drag .nestable-item {
  box-shadow: 2px 4px 6px 0 rgba(0, 0, 0, 0.1);
}
[dir=ltr] .nestable-drag .nestable-item.nestable-item-handle {
  box-shadow: none;
}

[dir=ltr] .nestable-handle-primary .nestable-handle, [dir=ltr] .nestable-handle-primary .nestable-placeholder {
  background-color: #5567FF;
  color: #ffffff;
  border-color: transparent;
}

[dir=ltr] .list-group.list-group-sp .list-group-item {
  margin-bottom: 0.25rem;
  border-radius: 0.25rem;
}
/*# sourceMappingURL=data:application/json;base64, */